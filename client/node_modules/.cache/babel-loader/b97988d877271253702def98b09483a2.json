{"ast":null,"code":"var _jsxFileName = \"C:\\\\Work\\\\React\\\\gtable\\\\client\\\\src\\\\components\\\\AppRouting.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from 'react';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { useSelector } from \"react-redux\";\nimport { AuthContext } from \"../context/context\";\nimport { privateRoutes, publicRoutes } from \"../routes/Routing\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AppRouting = () => {\n  _s();\n\n  const {\n    auth,\n    setAuth\n  } = useContext(AuthContext);\n  useEffect(() => {\n    if (localStorage.getItem(\"auth\")) {\n      setAuth(true);\n    }\n  }); // localStorage.clear()\n\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: auth ? privateRoutes.map(rout => /*#__PURE__*/_jsxDEV(Route, {\n        path: rout.path,\n        element: rout.element\n      }, rout.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 51\n      }, this)) : publicRoutes.map(rout => /*#__PURE__*/_jsxDEV(Route, {\n        path: rout.path,\n        element: rout.element\n      }, rout.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AppRouting, \"X+3FLpGdWVQ0vypFiEgEUuWh8d4=\");\n\n_c = AppRouting;\nexport default AppRouting;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppRouting\");","map":{"version":3,"names":["React","useContext","useEffect","BrowserRouter","Route","Routes","useSelector","AuthContext","privateRoutes","publicRoutes","AppRouting","auth","setAuth","localStorage","getItem","map","rout","path","element","id"],"sources":["C:/Work/React/gtable/client/src/components/AppRouting.jsx"],"sourcesContent":["import React, {useContext, useEffect} from 'react';\r\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport {AuthContext} from \"../context/context\";\r\nimport {privateRoutes, publicRoutes} from \"../routes/Routing\";\r\n\r\nconst AppRouting = () => {\r\n    const {auth, setAuth} = useContext(AuthContext);\r\n    useEffect(() => {\r\n        if (localStorage.getItem(\"auth\")) {\r\n            setAuth(true)\r\n        }\r\n    })\r\n// localStorage.clear()\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                {auth ? privateRoutes.map(rout => <Route path={rout.path} element={rout.element} key={rout.id}/>)\r\n                    : publicRoutes.map(rout => <Route path={rout.path} element={rout.element} key={rout.id}/>)}\r\n\r\n            </Routes>\r\n        </BrowserRouter>\r\n    );\r\n};\r\n\r\nexport default AppRouting;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,QAA2C,OAA3C;AACA,SAAQC,aAAR,EAAuBC,KAAvB,EAA8BC,MAA9B,QAA2C,kBAA3C;AACA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,WAAR,QAA0B,oBAA1B;AACA,SAAQC,aAAR,EAAuBC,YAAvB,QAA0C,mBAA1C;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAM;IAACC,IAAD;IAAOC;EAAP,IAAkBX,UAAU,CAACM,WAAD,CAAlC;EACAL,SAAS,CAAC,MAAM;IACZ,IAAIW,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAJ,EAAkC;MAC9BF,OAAO,CAAC,IAAD,CAAP;IACH;EACJ,CAJQ,CAAT,CAFqB,CAOzB;;EACI,oBACI,QAAC,aAAD;IAAA,uBACI,QAAC,MAAD;MAAA,UACKD,IAAI,GAAGH,aAAa,CAACO,GAAd,CAAkBC,IAAI,iBAAI,QAAC,KAAD;QAAO,IAAI,EAAEA,IAAI,CAACC,IAAlB;QAAwB,OAAO,EAAED,IAAI,CAACE;MAAtC,GAAoDF,IAAI,CAACG,EAAzD;QAAA;QAAA;QAAA;MAAA,QAA1B,CAAH,GACCV,YAAY,CAACM,GAAb,CAAiBC,IAAI,iBAAI,QAAC,KAAD;QAAO,IAAI,EAAEA,IAAI,CAACC,IAAlB;QAAwB,OAAO,EAAED,IAAI,CAACE;MAAtC,GAAoDF,IAAI,CAACG,EAAzD;QAAA;QAAA;QAAA;MAAA,QAAzB;IAFV;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADJ;AASH,CAjBD;;GAAMT,U;;KAAAA,U;AAmBN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}